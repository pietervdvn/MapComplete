[
  {
    "path": [],
    "type": "object"
  },
  {
    "path": [
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "credits"
    ],
    "type": "string"
  },
  {
    "path": [
      "maintainer"
    ],
    "type": "string"
  },
  {
    "path": [
      "version"
    ],
    "type": "string"
  },
  {
    "path": [
      "mustHaveLanguage"
    ],
    "type": "array"
  },
  {
    "path": [
      "title"
    ]
  },
  {
    "path": [
      "shortDescription"
    ]
  },
  {
    "path": [
      "description"
    ]
  },
  {
    "path": [
      "descriptionTail"
    ]
  },
  {
    "path": [
      "icon"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "socialImage"
    ],
    "typeHint": "image",
    "type": "string"
  },
  {
    "path": [
      "startZoom"
    ],
    "type": "number"
  },
  {
    "path": [
      "widenFactor"
    ],
    "type": "number"
  },
  {
    "path": [
      "overpassMaxZoom"
    ],
    "type": "number"
  },
  {
    "path": [
      "osmApiTileSize"
    ],
    "type": "number"
  },
  {
    "path": [
      "overrideAll"
    ]
  },
  {
    "path": [
      "defaultBackgroundId"
    ],
    "type": "string"
  },
  {
    "path": [
      "tileLayerSources"
    ],
    "type": "array"
  },
  {
    "path": [
      "tileLayerSources"
    ],
    "type": "object"
  },
  {
    "path": [
      "tileLayerSources",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "tileLayerSources",
      "source"
    ],
    "type": "string"
  },
  {
    "path": [
      "tileLayerSources",
      "isOverlay"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "tileLayerSources",
      "name"
    ]
  },
  {
    "path": [
      "tileLayerSources",
      "minZoom"
    ],
    "type": "number"
  },
  {
    "path": [
      "tileLayerSources",
      "maxZoom"
    ],
    "type": "number"
  },
  {
    "path": [
      "tileLayerSources",
      "defaultState"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers"
    ],
    "type": [
      {
        "$ref": "#/definitions/LayerConfigJson"
      },
      {
        "type": "object",
        "properties": {
          "builtin": {
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "override": {},
          "hideTagRenderingsWithLabels": {
            "description": "TagRenderings with any of these labels will be removed from the layer.\nNote that the 'id' and 'group' are considered labels too",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "builtin",
          "override"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "name"
    ]
  },
  {
    "path": [
      "layers",
      "description"
    ]
  },
  {
    "path": [
      "layers",
      "source"
    ],
    "type": [
      {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "osmTags": {
                "description": "Every source must set which tags have to be present in order to load the given layer.",
                "anyOf": [
                  {
                    "$ref": "#/definitions/AndOrTagConfigJson"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "maxCacheAge": {
                "description": "The maximum amount of seconds that a tile is allowed to linger in the cache",
                "type": "number"
              }
            },
            "required": [
              "osmTags"
            ]
          },
          {
            "type": "object",
            "properties": {
              "overpassScript": {
                "type": "string"
              }
            }
          }
        ]
      },
      {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "osmTags": {
                "description": "Every source must set which tags have to be present in order to load the given layer.",
                "anyOf": [
                  {
                    "$ref": "#/definitions/AndOrTagConfigJson"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "maxCacheAge": {
                "description": "The maximum amount of seconds that a tile is allowed to linger in the cache",
                "type": "number"
              }
            },
            "required": [
              "osmTags"
            ]
          },
          {
            "type": "object",
            "properties": {
              "geoJson": {
                "description": "The actual source of the data to load, if loaded via geojson.\n\n# A single geojson-file\nsource: {geoJson: \"https://my.source.net/some-geo-data.geojson\"}\n fetches a geojson from a third party source\n\n# A tiled geojson source\nsource: {geoJson: \"https://my.source.net/some-tile-geojson-{layer}-{z}-{x}-{y}.geojson\", geoJsonZoomLevel: 14}\n to use a tiled geojson source. The web server must offer multiple geojsons. {z}, {x} and {y} are substituted by the location; {layer} is substituted with the id of the loaded layer\n\nSome API's use a BBOX instead of a tile, this can be used by specifying {y_min}, {y_max}, {x_min} and {x_max}",
                "type": "string"
              },
              "geoJsonZoomLevel": {
                "description": "To load a tiled geojson layer, set the zoomlevel of the tiles",
                "type": "number"
              },
              "isOsmCache": {
                "description": "Indicates that the upstream geojson data is OSM-derived.\nUseful for e.g. merging or for scripts generating this cache",
                "type": "boolean"
              },
              "mercatorCrs": {
                "description": "Some API's use a mercator-projection (EPSG:900913) instead of WGS84. Set the flag `mercatorCrs: true`  in the source for this",
                "type": "boolean"
              },
              "idKey": {
                "description": "Some API's have an id-field, but give it a different name.\nSetting this key will rename this field into 'id'",
                "type": "string"
              }
            },
            "required": [
              "geoJson"
            ]
          }
        ]
      }
    ]
  },
  {
    "path": [
      "layers",
      "calculatedTags"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "doNotDownload"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "isShown"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "isShown",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "isShown",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "isShown",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "isShown",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "isShown",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "isShown",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "isShown",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "isShown",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "isShown",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "isShown",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "isShown",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "isShown",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "isShown",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "forceLoad"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "minzoom"
    ],
    "type": "number"
  },
  {
    "path": [
      "layers",
      "shownByDefault"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "minzoomVisible"
    ],
    "type": "number"
  },
  {
    "path": [
      "layers",
      "title"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "title"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "title",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "title",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "title",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "title",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "title",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "title",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "title",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "title",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "title",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "title",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "title",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "title",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "title",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "titleIcons"
    ],
    "typeHint": "icon[]",
    "type": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/TagRenderingConfigJson"
            },
            {
              "type": "string"
            }
          ]
        }
      },
      {
        "type": "array",
        "items": [
          {
            "type": "string",
            "enum": [
              "defaults"
            ]
          }
        ],
        "minItems": 1,
        "maxItems": 1
      }
    ]
  },
  {
    "path": [
      "layers",
      "titleIcons"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "titleIcons",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering"
    ],
    "type": [
      {
        "type": "array",
        "items": {
          "anyOf": [
            {
              "$ref": "#/definitions/default_4"
            },
            {
              "$ref": "#/definitions/default_5"
            }
          ]
        }
      },
      {
        "type": "null"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "location"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "icon",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then"
    ],
    "typeHint": "icon",
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconBadges",
      "then",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "iconSize",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "rotation",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "label",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "color",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": [
          "string",
          "number"
        ]
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "width",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "dashArray",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "lineCap",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "enum": [
          "no",
          "yes"
        ],
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fill",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "fillColor",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset"
    ],
    "type": [
      {
        "$ref": "#/definitions/TagRenderingConfigJson"
      },
      {
        "type": "number"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "freeform",
      "key"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "mappings",
      "if"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "A hint to mapcomplete on how to render this icon within the mapping.\nThis is translated to 'mapping-icon-<classtype>', so defining your own in combination with a custom CSS is possible (but discouraged)",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "mapRendering",
      "offset",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "passAllFeatures"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "presets"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "presets",
      "title"
    ]
  },
  {
    "path": [
      "layers",
      "presets",
      "tags"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "presets",
      "description"
    ]
  },
  {
    "path": [
      "layers",
      "presets",
      "exampleImages"
    ],
    "typeHint": "image",
    "type": "array"
  },
  {
    "path": [
      "layers",
      "presets",
      "preciseInput"
    ],
    "type": [
      {
        "type": "object",
        "properties": {
          "preferredBackground": {
            "description": "The type of background picture",
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "snapToLayer": {
            "description": "If specified, these layers will be shown to and the new point will be snapped towards it",
            "anyOf": [
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              {
                "type": "string"
              }
            ]
          },
          "maxSnapDistance": {
            "description": "If specified, a new point will only be snapped if it is within this range.\nDistance in meter\n\nDefault: 10",
            "type": "number"
          }
        },
        "required": [
          "preferredBackground"
        ]
      },
      {
        "enum": [
          true
        ],
        "type": "boolean"
      }
    ]
  },
  {
    "path": [
      "layers",
      "presets",
      "preciseInput",
      "preferredBackground"
    ],
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "presets",
      "preciseInput",
      "snapToLayer"
    ],
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "presets",
      "preciseInput",
      "maxSnapDistance"
    ],
    "type": "number"
  },
  {
    "path": [
      "layers",
      "tagRenderings"
    ],
    "type": [
      {
        "$ref": "#/definitions/QuestionableTagRenderingConfigJson"
      },
      {
        "type": "object",
        "properties": {
          "builtin": {
            "type": "string"
          },
          "override": {}
        },
        "required": [
          "builtin",
          "override"
        ]
      },
      {
        "$ref": "#/definitions/default<(string|QuestionableTagRenderingConfigJson|{builtin:string;override:any;})[]>"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "question"
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "freeform",
      "type"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "freeform",
      "placeholder"
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "freeform",
      "helperArgs"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "freeform",
      "addExtraTags"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "freeform",
      "inline"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "freeform",
      "default"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "multiAnswer"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the  icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "Size of the image",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "mappings",
      "hideInAnswer"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": [
          "string",
          "boolean"
        ]
      }
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "mappings",
      "ifnot"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "mappings",
      "addExtraTags"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "question"
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "freeform"
    ],
    "type": "object"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "freeform",
      "type"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "freeform",
      "placeholder"
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "freeform",
      "helperArgs"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "freeform",
      "addExtraTags"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "freeform",
      "inline"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "freeform",
      "default"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "multiAnswer"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "mappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "mappings",
      "then"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "mappings",
      "icon"
    ],
    "typeHint": "icon",
    "type": [
      {
        "type": "object",
        "properties": {
          "path": {
            "description": "The path to the  icon\nType: icon",
            "type": "string"
          },
          "class": {
            "description": "Size of the image",
            "type": "string"
          }
        },
        "required": [
          "class",
          "path"
        ]
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "mappings",
      "icon",
      "path"
    ],
    "typeHint": "icon",
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "mappings",
      "icon",
      "class"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "mappings",
      "hideInAnswer"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": [
          "string",
          "boolean"
        ]
      }
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "mappings",
      "ifnot"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "mappings",
      "addExtraTags"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "group"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "labels"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "render"
    ],
    "typeHint": "rendered"
  },
  {
    "path": [
      "layers",
      "tagRenderings",
      "renderings",
      "condition"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "filter"
    ],
    "type": [
      {
        "type": "array",
        "items": {
          "$ref": "#/definitions/default_1"
        }
      },
      {
        "type": "object",
        "properties": {
          "sameAs": {
            "type": "string"
          }
        },
        "required": [
          "sameAs"
        ]
      }
    ]
  },
  {
    "path": [
      "layers",
      "filter",
      "id"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "filter",
      "options"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "deletion"
    ],
    "type": [
      {
        "$ref": "#/definitions/DeleteConfigJson"
      },
      {
        "type": "boolean"
      }
    ]
  },
  {
    "path": [
      "layers",
      "deletion",
      "extraDeleteReasons"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "deletion",
      "extraDeleteReasons",
      "explanation"
    ]
  },
  {
    "path": [
      "layers",
      "deletion",
      "extraDeleteReasons",
      "changesetMessage"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "deletion",
      "nonDeleteMappings"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "deletion",
      "softDeletionTags"
    ],
    "type": [
      {
        "$ref": "#/definitions/AndOrTagConfigJson"
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "layers",
      "deletion",
      "neededChangesets"
    ],
    "type": "number"
  },
  {
    "path": [
      "layers",
      "allowMove"
    ],
    "type": [
      {
        "$ref": "#/definitions/default_3"
      },
      {
        "type": "boolean"
      }
    ]
  },
  {
    "path": [
      "layers",
      "allowMove",
      "enableImproveAccuracy"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "allowMove",
      "enableRelocation"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "allowSplit"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "units"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "units",
      "appliesToKey"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "units",
      "eraseInvalidValues"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "units",
      "applicableUnits"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "units",
      "applicableUnits",
      "canonicalDenomination"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "units",
      "applicableUnits",
      "canonicalDenominationSingular"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "units",
      "applicableUnits",
      "alternativeDenomination"
    ],
    "type": "array"
  },
  {
    "path": [
      "layers",
      "units",
      "applicableUnits",
      "human"
    ]
  },
  {
    "path": [
      "layers",
      "units",
      "applicableUnits",
      "humanSingular"
    ]
  },
  {
    "path": [
      "layers",
      "units",
      "applicableUnits",
      "prefix"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "units",
      "applicableUnits",
      "default"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "layers",
      "syncSelection"
    ],
    "type": "string"
  },
  {
    "path": [
      "layers",
      "hideTagRenderingsWithLabels"
    ],
    "type": "array"
  },
  {
    "path": [
      "clustering"
    ],
    "type": [
      {
        "type": "object",
        "properties": {
          "maxZoom": {
            "description": "All zoom levels above 'maxzoom' are not clustered anymore.\nDefaults to 18",
            "type": "number"
          },
          "minNeededElements": {
            "description": "The number of elements per tile needed to start clustering\nIf clustering is defined, defaults to 250",
            "type": "number"
          }
        }
      },
      {
        "enum": [
          false
        ],
        "type": "boolean"
      }
    ]
  },
  {
    "path": [
      "clustering",
      "maxZoom"
    ],
    "type": "number"
  },
  {
    "path": [
      "clustering",
      "minNeededElements"
    ],
    "type": "number"
  },
  {
    "path": [
      "customCss"
    ],
    "type": "string"
  },
  {
    "path": [
      "hideFromOverview"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "lockLocation"
    ],
    "type": [
      {
        "type": "array",
        "items": [
          {
            "type": "array",
            "items": [
              {
                "type": "number"
              },
              {
                "type": "number"
              }
            ],
            "minItems": 2,
            "maxItems": 2
          },
          {
            "type": "array",
            "items": [
              {
                "type": "number"
              },
              {
                "type": "number"
              }
            ],
            "minItems": 2,
            "maxItems": 2
          }
        ],
        "minItems": 2,
        "maxItems": 2
      },
      {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "number"
          }
        }
      }
    ]
  },
  {
    "path": [
      "enableUserBadge"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableShareScreen"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableMoreQuests"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableLayers"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableSearch"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableAddNewPoints"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableGeolocation"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableBackgroundLayerSelection"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableShowAllQuestions"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableDownload"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enablePdfDownload"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "enableNoteImports"
    ],
    "type": "boolean"
  },
  {
    "path": [
      "overpassUrl"
    ],
    "type": [
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      {
        "type": "string"
      }
    ]
  },
  {
    "path": [
      "overpassTimeout"
    ],
    "type": "number"
  }
]